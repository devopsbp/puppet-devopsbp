# This is an autogenerated function, ported from the original legacy version.
# It /should work/ as is, but will not have all the benefits of the modern
# function API. You should see the function docs to learn how to add function
# signatures for type safety and to document this function using puppet-strings.
#
# https://puppet.com/docs/puppet/latest/custom_functions_ruby.html
#
# ---- original file header ----
require 'octokit'

# ---- original file header ----
#
# @summary
#   Summarise what the function does here
#
Puppet::Functions.create_function(:'include_team_environments') do
  # @param arguments
  #   The original array of arguments. Port this to individually managed params
  #   to get the full benefit of the modern function API.
  #
  # @return [Data type]
  #   Describe what the function returns here
  #
  dispatch :default_impl do
    # Call the method named 'default_impl' when this is matched
    # Port this to match individual params for better type safety
    repeated_param 'Any', :arguments
  end


  def default_impl(*arguments)
    
    unless arguments.length == 1
      raise Puppet::ParseError, "Must provide exactly one arg to include_team_environments"
    end

    Puppet::Parser::Functions.function('include')

    api = Octokit::Client.new :access_token => Facter[:github_token].value
    org = arguments[0]

    teams = api.org_teams(org)
    teams.each do |team|
      klass = "#{org}::environment::#{team.slug}"
      path = "#{Facter[:boxen_repodir].value}/modules/#{org}/manifests/environment/#{team.slug}.pp"

      next if team.slug =~ /^owners$/

      if api.team_member?(team.id, Facter[:github_login].value)
        if File.exist?(path)
          function_include [klass]
        else
          warning "Don't know anything about '#{klass}'. Help out by defining it at '#{path}'."
        end
      end
    end
  
  end
end
